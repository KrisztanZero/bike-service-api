name: Test and Docker

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development
  workflow_dispatch:

jobs:
  build-and-run:
    needs: nunit-test
    if: ${{ needs.nunit-test.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Cleanup Docker resources
        run: docker system prune -f

      - name: Create Docker network
        run: docker network create bike-service-network

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build docker DB image
        run: docker build -t bike-service-db:latest -f ./database/Dockerfile-db .

      - name: Run Docker DB container
        run: docker run -d --network=bike-service-network --name bike-service-db bike-service-db

      - name: Build docker API image
        run: docker build -t bike-service-api:latest ./BikeServiceAPI

      - name: Run Docker API container
        run: docker run -d --network=bike-service-network --name bike-service-api bike-service-api

      - name: Update database schema
        run: docker exec bike-service-api dotnet ef database update --project ./BikeServiceAPI/BikeServiceAPI.csproj --context BikeServiceDbContext --verbose

  lint-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore NuGet packages
        run: nuget restore BikeServiceAPI.sln

      - name: Run lint test
        run: dotnet build --configuration Release /p:StyleCopEnabled=true

  nunit-test:
    needs: lint-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore NuGet packages
        run: nuget restore BikeServiceAPI.sln

      - name: Build and run NUnit tests
        run: |
          dotnet test BikeServiceAPI.sln --logger "trx;LogFileName=test_results.trx"

  
  push-to-dockerhub:
    needs: build-and-run
    if: ${{ needs.build-and-run.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push API docker image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker push krisztanzero/bike-service-project:bike-service-api

      - name: Push DB docker image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker push krisztanzero/bike-service-project:bike-service-db
